library(leaflet)
if(!require("osmdata")) install.packages("osmdata")
if(!require("tidyverse")) install.packages("tidyverse")
if(!require("sf")) install.packages("sf")
if(!require("leaflet")) install.packages("leaflet")
#load packages
library(tidyverse)
library(osmdata)
library(sf)
library(leaflet)
head(available_features())
# amenities
head(available_tags("amenity"))
cinema <- getbb("pekanbaru") %>%
opq()%>%
add_osm_feature(key = "amenity", value = "cinema") %>%
osmdata_sf()
cinema_point$lat  <- as.numeric(cinema_point$lat )
cinema_point <- data.frame(cinema$osm_points[c('osm_id', 'name', 'amenity')])
cinema_point$geometry <- as.character(cinema_point$geometry)
cinema_point <- cinema_point %>% separate(geometry, c("long", "lat"), ", ")
cinema_point$long <- str_remove_all(cinema_point$long, "[c(]") cinema_point$lat <- str_remove_all(cinema_point$lat,"[)]")
cinema_point <- data.frame(cinema$osm_points[c('osm_id', 'name', 'amenity')])
cinema_point$geometry <- as.character(cinema_point$geometry)
cinema_point <- cinema_point %>% separate(geometry, c("long", "lat"), ", ")
cinema_point$long <- str_remove_all(cinema_point$long, "[c(]")
cinema_point$lat <- str_remove_all(cinema_point$lat,"[)]")
cinema_point$long <- as.numeric(cinema_point$long)
cinema_point$lat  <- as.numeric(cinema_point$lat )
leaflet(cinema_point) %>%
addTiles() %>% addMarkers(
lng = ~long,
lat = ~lat,
label = ~name
)
# Definisikan bounding box untuk Pekanbaru
school <- opq("Pekanbaru") %>%
add_osm_feature(key = "amenity", value = "school") %>%
osmdata_sf()
# Lihat struktur data yang diambil
print(school)
leaflet() %>%
addTiles() %>%
addCircleMarkers(
data = school$osm_points,
lng = ~lon, lat = ~lat,
radius = 5,
color = "red",
label = ~name
) %>%
addLegend("bottomright", colors = "red", labels = "Sekolah", title = "Legenda")
# Pastikan ada data dalam objek
if (!is.null(school$osm_points)) {
# Ekstrak koordinat dari objek sf
pekanbaru_coords <- school$osm_points %>%
st_coordinates() %>%
as.data.frame()
# Tambahkan koordinat ke data asli
school$osm_points$lon <- school_coords$X
school$osm_points$lat <- school_coords$Y
# Visualisasi dengan leaflet
leaflet(school$osm_points) %>%
addTiles() %>%
addCircleMarkers(
lng = ~lon, lat = ~lat,
radius = 5,
color = "red",
label = ~name
) %>%
addLegend("bottomright", colors = "red", labels = "Sekolah", title = "Legenda")
} else {
print("Data sekolah tidak ditemukan.")
}
# Pastikan ada data dalam objek
if (!is.null(school$osm_points)) {
# Ekstrak koordinat dari objek sf
school_coords <- school$osm_points %>%
st_coordinates() %>%
as.data.frame()
# Tambahkan koordinat ke data asli
school$osm_points$lon <- school_coords$X
school$osm_points$lat <- school_coords$Y
# Visualisasi dengan leaflet
leaflet(school$osm_points) %>%
addTiles() %>%
addCircleMarkers(
lng = ~lon, lat = ~lat,
radius = 5,
color = "red",
label = ~name
) %>%
addLegend("bottomright", colors = "red", labels = "Sekolah", title = "Legenda")
} else {
print("Data sekolah tidak ditemukan.")
}
# Ambil data sekolah dalam bentuk poligon
pekanbaru_schools <- opq("Pekanbaru") %>%
add_osm_feature(key = "amenity", value = "school") %>%
osmdata_sf()
# Cek apakah ada data poligon
if (!is.null(pekanbaru_schools$osm_polygons)) {
print("Data sekolah ditemukan!")
print(pekanbaru_schools$osm_polygons)
} else {
print("Tidak ada data poligon untuk sekolah.")
}
leaflet() %>%
addTiles() %>%
addPolygons(
data = pekanbaru_schools$osm_polygons,
color = "blue",
weight = 1,
fillColor = "lightblue",
fillOpacity = 0.5,
label = ~name
) %>%
addLegend("bottomright", colors = "blue", labels = "Sekolah", title = "Legenda")
# Install seminr jika belum terpasang
install.packages("seminr")
# Load package
library(seminr)
setwd("G:/Other computers/My Laptop/Pekerjaan/Pojok Statistik")
# Install seminr jika belum terpasang
install.packages("seminr")
# Load package
library(seminr)
data <- read.csv("dataset.csv", header = TRUE, sep = ',')
head(data)
#| label: konstruk-var
#| tbl-cap: "Rincian variabel konstruk dan item pertanyaan."
library(knitr)
konstruk_var <- read.csv(file = "konstruk-var.csv") %>% kable()
#| label: konstruk-var
#| tbl-cap: "Rincian variabel konstruk dan item pertanyaan."
library(knitr)
library(tidyverse)
konstruk_var <- read.csv(file = "konstruk-var.csv") %>% kable()
#| label: konstruk-var
#| tbl-cap: "Rincian variabel konstruk dan item pertanyaan."
konstruk_var <- read.csv(file = "konstruk-var.csv")
kable(konstruk_var, align = "l")
# Definisikan konstruk (measurement model)
mm <- constructs(
reflective("WLB",  multi_items("WLB", 1:6)),
reflective("EE",   multi_items("EE", 1:6)),
reflective("COMP", multi_items("COMP", 1:6)),
reflective("JC",   multi_items("JC", 1:6)),
reflective("TI",   multi_items("TI", 1:6))
)
#| label: load-packages
#| include: true
#| warning: false
# Load package
library(seminr)
# Definisikan konstruk (measurement model)
mm <- constructs(
reflective("WLB",  multi_items("WLB", 1:6)),
reflective("EE",   multi_items("EE", 1:6)),
reflective("COMP", multi_items("COMP", 1:6)),
reflective("JC",   multi_items("JC", 1:6)),
reflective("TI",   multi_items("TI", 1:6))
)
# Definisikan hubungan antar konstruk (structural model)
sm <- relationships(
paths(from = c("WLB", "EE", "COMP", "JC"), to = "TI")
)
# Estimasi model dengan metode Partial Least Square (PLS)
pls_model <- estimate_pls(data = data,
measurement_model = mm,
structural_model = sm)
# Plot diagramnya
plot(pls_model)
# Estimasi model dengan metode Partial Least Square (PLS)
pls_model <- estimate_pls(data = data,
measurement_model = mm,
structural_model = sm,
inner_weights = path_weighting,
missing = mean_replacement,
missing_value = "-99"))
# Estimasi model dengan metode Partial Least Square (PLS)
pls_model <- estimate_pls(data = data,
measurement_model = mm,
structural_model = sm,
inner_weights = path_weighting,
missing = mean_replacement,
missing_value = "-99")
# Plot diagramnya
plot(pls_model)
summary(is.na(data))
#| echo: true
data <- read.csv("dataset.csv", header = TRUE, sep = ',')
data <- data[,-1]
# Definisikan konstruk (measurement model)
mm <- constructs(
reflective("WLB",  multi_items("WLB", 1:6)),
reflective("EE",   multi_items("EE", 1:6)),
reflective("COMP", multi_items("COMP", 1:6)),
reflective("JC",   multi_items("JC", 1:6)),
reflective("TI",   multi_items("TI", 1:6))
)
# Definisikan hubungan antar konstruk (structural model)
sm <- relationships(
paths(from = c("WLB", "EE", "COMP", "JC"), to = "TI")
)
# Estimasi model dengan metode Partial Least Square (PLS)
pls_model <- estimate_pls(data = data,
measurement_model = mm,
structural_model = sm,
inner_weights = path_weighting,
missing = mean_replacement,
missing_value = "-99")
# Plot diagramnya
plot(pls_model)
View(pls_model)
# Estimasi model dengan metode Partial Least Square (PLS)
pls_model <- estimate_pls(data = data,
measurement_model = mm,
structural_model = sm,
inner_weights = path_weighting)
# Plot diagramnya
plot(pls_model)
# Estimasi model dengan metode Partial Least Square (PLS)
pls_model <- estimate_pls(data = data,
measurement_model = mm,
structural_model = sm,
inner_weights = path_weighting)
# Plot diagramnya
plot(pls_model, "Hasil Pemodelan")
summary(pls_model)
pls_model$path_coef
View(data)
View(mm)
# Definisikan konstruk (measurement model)
mm <- constructs(
composite("WLB",  multi_items("WLB", 1:6)),
composite("EE",   multi_items("EE", 1:6)),
composite("COMP", multi_items("COMP", 1:6)),
composite("JC",   multi_items("JC", 1:6)),
composite("TI",   multi_items("TI", 1:6))
)
View(mm)
# Definisikan hubungan antar konstruk (structural model)
sm <- relationships(
paths(from = c("WLB", "EE", "COMP", "JC"), to = "TI")
)
# Estimasi model dengan metode Partial Least Square (PLS)
pls_model <- estimate_pls(data = data,
measurement_model = mm,
structural_model = sm,
inner_weights = path_weighting)
# Plot diagramnya
#plot(pls_model, "Hasil Pemodelan")
pls_model$path_coef
# Plot diagramnya
plot(pls_model, "Hasil Pemodelan")
# Plot diagramnya
plot(pls_model, "Hasil Pemodelan")
summary_pls_model <- summary(pls_model)
# Koefisien jalur
summary_pls_model$paths
# Reliabilitas
summary_pls_model$reliability
# Validitas
summary_pls_model$validity
# Definisikan hubungan antar konstruk (structural model) dengan variabel moderasi
sm2 <- relationships(
paths(from = c("WLB", "EE", "COMP", "JC"), to = "TI"),
interaction_term(iv = "WLB", moderator = "JC", method = "product", name = "WLBxJC"),
interaction_term(iv = "EE",  moderator = "JC", method = "product", name = "EExJC"),
interaction_term(iv = "COMP", moderator = "JC", method = "product", name = "COMPxJC"),
paths(from = c("WLBxJC", "EExJC", "COMPxJC"), to = "TI")
)
# Definisikan hubungan antar konstruk (structural model) dengan variabel moderasi
sm2 <- relationships(
paths(from = c("WLB", "EE", "COMP", "JC"), to = "TI"),
interaction_term(iv = "WLB", moderator = "JC", method = "product"),
interaction_term(iv = "EE",  moderator = "JC", method = "product"),
interaction_term(iv = "COMP", moderator = "JC", method = "product"),
paths(from = c("WLB*JC", "EE*JC", "COMP*JC"), to = "TI")
)
# Definisikan konstruk (measurement model)
mm2 <- constructs(
composite("WLB",  multi_items("WLB", 1:6)),
composite("EE",   multi_items("EE", 1:6)),
composite("COMP", multi_items("COMP", 1:6)),
composite("JC",   multi_items("JC", 1:6)),
composite("TI",   multi_items("TI", 1:6))
)
# Definisikan hubungan antar konstruk (structural model) dengan variabel moderasi
sm2 <- relationships(
paths(from = c("WLB", "EE", "COMP", "JC"), to = "TI"),
interaction_term(iv = "WLB", moderator = "JC", method = "product"),
interaction_term(iv = "EE",  moderator = "JC", method = "product"),
interaction_term(iv = "COMP", moderator = "JC", method = "product"),
paths(from = c("WLB*JC", "EE*JC", "COMP*JC"), to = "TI")
)
# Definisikan konstruk (measurement model)
mm2 <- constructs(
composite("WLB",  multi_items("WLB", 1:6)),
composite("EE",   multi_items("EE", 1:6)),
composite("COMP", multi_items("COMP", 1:6)),
composite("JC",   multi_items("JC", 1:6)),
composite("TI",   multi_items("TI", 1:6)),
interaction_term(iv = "WLB", moderator = "JC", method = "product"),
interaction_term(iv = "EE",  moderator = "JC", method = "product"),
interaction_term(iv = "COMP", moderator = "JC", method = "product")
)
# Definisikan hubungan antar konstruk (structural model) dengan variabel moderasi
sm2 <- relationships(
paths(from = c("WLB", "EE", "COMP", "JC"), to = "TI"),
paths(from = c("WLB*JC", "EE*JC", "COMP*JC"), to = "TI")
)
#| label: load-packages
#| include: true
#| warning: false
# Load package
library(seminr)
# Definisikan konstruk (measurement model)
mm2 <- constructs(
composite("WLB",  multi_items("WLB", 1:6)),
composite("EE",   multi_items("EE", 1:6)),
composite("COMP", multi_items("COMP", 1:6)),
composite("JC",   multi_items("JC", 1:6)),
composite("TI",   multi_items("TI", 1:6)),
interaction_term(iv = "WLB", moderator = "JC", method = "product"),
interaction_term(iv = "EE",  moderator = "JC", method = "product"),
interaction_term(iv = "COMP", moderator = "JC", method = "product")
)
# Definisikan konstruk (measurement model)
mm2 <- constructs(
composite("WLB",  multi_items("WLB", 1:6)),
composite("EE",   multi_items("EE", 1:6)),
composite("COMP", multi_items("COMP", 1:6)),
composite("JC",   multi_items("JC", 1:6)),
composite("TI",   multi_items("TI", 1:6)),
interaction_term(iv = "WLB", moderator = "JC", method = two_stage),
interaction_term(iv = "EE",  moderator = "JC", method = two_stage),
interaction_term(iv = "COMP", moderator = "JC", method = two_stage)
)
# Definisikan hubungan antar konstruk (structural model) dengan variabel moderasi
sm2 <- relationships(
paths(from = c("WLB", "EE", "COMP", "JC"), to = "TI"),
paths(from = c("WLB*JC", "EE*JC", "COMP*JC"), to = "TI")
)
# Estimasi model dengan metode Partial Least Square (PLS)
pls_model2 <- estimate_pls(data = data,
measurement_model = mm2,
structural_model = sm2,
inner_weights = path_weighting)
# Plot diagramnya
plot(pls_model2, "Hasil Pemodelan")
#| label: fig-plot
#| fig-cap: "Grafik hasil pemodelan"
# Plot diagramnya
plot(pls_model)
#| label: fig-plot
#| fig-cap: "Grafik hasil pemodelan"
# Plot diagramnya
p <- plot(pls_model)
print (p)
#| label: fig-plot
#| fig-cap: "Grafik hasil pemodelan"
# Plot diagramnya
p <- plot(pls_model)
#| label: fig-plot
#| fig-cap: "Grafik hasil pemodelan"
# Plot diagramnya
p <- plot(pls_model)
p
#| label: fig-plot
#| fig-cap: "Grafik hasil pemodelan"
#| echo: false
#| message: false
#| warning: false
# Simpan grafik ke file
png("model-pls.png", width = 800, height = 600)
plot(pls_model)
dev.off()
# Tampilkan gambar
knitr::include_graphics("model-pls.png")
#| echo: false
#| include: false
# Simpan grafik ke file
png("model-pls.png", width = 800, height = 600)
plot(pls_model)
dev.off()
#| label: fig-plot
#| fig-cap: "Grafik hasil pemodelan"
# Tampilkan gambar
knitr::include_graphics("model-pls.png")
#| echo: false
#| include: false
# Simpan grafik ke file
png("model-pls.jpg", width = 485, height = 306)
plot(pls_model)
dev.off()
#| label: fig-plot
#| fig-cap: "Grafik hasil pemodelan"
# Tampilkan gambar
knitr::include_graphics("model-pls.jpg")
#| label: fig-plot
#| fig-cap: "Grafik hasil pemodelan"
# Tampilkan gambar
knitr::include_graphics("model-pls.jpeg")
#| echo: false
#| include: false
# Simpan grafik ke file
png("model-pls.jpeg", width = 485, height = 306)
plot(pls_model)
dev.off()
#| label: fig-plot
#| fig-cap: "Grafik hasil pemodelan"
# Tampilkan gambar
knitr::include_graphics("model-pls.jpeg")
#| echo: false
#| include: false
# Simpan grafik ke file
jpeg("model-pls.jpeg", width = 485, height = 306)
plot(pls_model)
dev.off()
#| label: fig-plot
#| fig-cap: "Grafik hasil pemodelan"
# Tampilkan gambar
knitr::include_graphics("model-pls.jpeg")
#| echo: false
#| include: false
# Simpan grafik ke file
jpeg("model-pls.jpeg")
plot(pls_model)
dev.off()
#| label: fig-plot
#| fig-cap: "Grafik hasil pemodelan"
# Tampilkan gambar
knitr::include_graphics("model-pls.jpeg")
#| echo: false
#| message: false
#| warning: false
plot(pls_model)
#| echo: false
#| include: false
# Simpan grafik ke file
jpeg("model-pls.jpeg")
plot(pls_model)
dev.off()
#| label: fig-plot
#| fig-cap: "Grafik hasil pemodelan"
# Tampilkan gambar
knitr::include_graphics("model-pls.jpeg")
#| label: fig-plot
#| fig-cap: "Grafik hasil pemodelan"
save_plot("model-pls.jpeg", plot = p)
Y
install.packages("rsvg")
#| label: fig-plot
#| fig-cap: "Grafik hasil pemodelan"
save_plot("model-pls.jpeg", plot = p)
# Tampilkan gambar
knitr::include_graphics("model-pls.jpeg")
#| label: fig-plot
#| fig-cap: "Grafik hasil pemodelan"
save_plot("model-pls.png", plot = p)
# Tampilkan gambar
knitr::include_graphics("model-pls.png")
knitr::include_graphics("model-pls.jpeg")
# Estimasi model dengan metode Partial Least Square (PLS)
pls_model2 <- estimate_pls(data = data,
measurement_model = mm2,
structural_model = sm2,
inner_weights = path_weighting)
# Plot diagramnya
plot(pls_model2, "Hasil Pemodelan")
#| label: fig-plot
#| fig-cap: "Grafik hasil pemodelan"
#| echo: true
#| message: false
#| warning: false
#| error: false
plot(pls_model)
